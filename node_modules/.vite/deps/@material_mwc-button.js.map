{
  "version": 3,
  "sources": ["../../@material/mwc-icon/mwc-icon.ts", "../../@material/mwc-base/aria-property.ts", "../../@material/mwc-button/mwc-button-base.ts", "../../@material/mwc-button/mwc-button.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {html, LitElement, TemplateResult} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles} from './mwc-icon-host.css';\n\n/** @soyCompatible */\n@customElement('mwc-icon')\nexport class Icon extends LitElement {\n  static override styles = [styles];\n\n  /** @soyTemplate */\n  protected override render(): TemplateResult {\n    return html`<span><slot></slot></span>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-icon': Icon;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {PropertyDeclaration, ReactiveElement} from '@lit/reactive-element';\n\n/**\n * A value for the `aria-haspopup` ARIA attribute.\n */\nexport type AriaHasPopup =\n    'false'|'true'|'menu'|'listbox'|'tree'|'grid'|'dialog';\n\n/**\n * Expose protected statics on ReactiveElement\n */\ninterface ReactiveElementInternals {\n  getPropertyDescriptor(name: PropertyKey, key: string): PropertyDescriptor;\n  getPropertyOptions(name: PropertyKey): PropertyDeclaration;\n}\n\n/**\n * TypeScript version of the decorator\n * @see https://www.typescriptlang.org/docs/handbook/decorators.html#property-decorators\n */\nfunction tsDecorator(\n    prototype: {}, name: string, descriptor?: PropertyDescriptor) {\n  const constructor =\n      (prototype.constructor as unknown as ReactiveElementInternals);\n  if (!descriptor) {\n    /**\n     * lit uses internal properties with two leading underscores to\n     * provide storage for accessors\n     */\n    const litInternalPropertyKey = `__${name}`;\n    descriptor =\n        constructor.getPropertyDescriptor(name, litInternalPropertyKey);\n    if (!descriptor) {\n      throw new Error('@ariaProperty must be used after a @property decorator');\n    }\n  }\n\n  // descriptor must exist at this point, reassign so typescript understands\n  const propDescriptor = descriptor;\n  let attribute = '';\n\n  if (!propDescriptor.set) {\n    throw new Error(`@ariaProperty requires a setter for ${name}`);\n  }\n\n\n  // TODO(b/202853219): Remove this check when internal tooling is\n  // compatible\n  // tslint:disable-next-line:no-any bail if applied to internal generated class\n  if ((prototype as any).dispatchWizEvent) {\n    return descriptor;\n  }\n\n  const wrappedDescriptor: PropertyDescriptor = {\n    configurable: true,\n    enumerable: true,\n    set(this: ReactiveElement, value: unknown) {\n      if (attribute === '') {\n        const options = constructor.getPropertyOptions(name);\n        // if attribute is not a string, use `name` instead\n        attribute =\n            typeof options.attribute === 'string' ? options.attribute : name;\n      }\n      if (this.hasAttribute(attribute)) {\n        this.removeAttribute(attribute);\n      }\n      propDescriptor.set!.call(this, value);\n    }\n  };\n\n  if (propDescriptor.get) {\n    wrappedDescriptor.get = function(this: ReactiveElement) {\n      return propDescriptor.get!.call(this);\n    };\n  }\n\n  return wrappedDescriptor;\n}\n\n/**\n * A property decorator proxies an aria attribute to an internal node\n *\n * This decorator is only intended for use with ARIA attributes, such as `role`\n * and `aria-label` due to screenreader needs.\n *\n * Upon first render, `@ariaProperty` will remove the attribute from the host\n * element to prevent screenreaders from reading the host instead of the\n * internal node.\n *\n * This decorator should only be used for non-Symbol public fields decorated\n * with `@property`, or on a setter with an optional getter.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @ariaProperty\n *   @property({ type: String, attribute: 'aria-label' })\n *   ariaLabel!: string;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function ariaProperty(\n    protoOrDescriptor: {}, name?: string,\n    // tslint:disable-next-line:no-any any is required as a return type from decorators\n    descriptor?: PropertyDescriptor): any {\n  if (name !== undefined) {\n    return tsDecorator(protoOrDescriptor, name, descriptor);\n  } else {\n    throw new Error('@ariaProperty only supports TypeScript Decorators');\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport '@material/mwc-icon/mwc-icon';\nimport '@material/mwc-ripple/mwc-ripple';\n\nimport {AriaHasPopup, ariaProperty} from '@material/mwc-base/aria-property';\nimport {Ripple} from '@material/mwc-ripple/mwc-ripple';\nimport {RippleHandlers} from '@material/mwc-ripple/ripple-handlers';\nimport {html, LitElement, TemplateResult} from 'lit';\nimport {eventOptions, property, query, queryAsync, state} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\n/** @soyCompatible */\nexport class ButtonBase extends LitElement {\n  static override shadowRootOptions:\n      ShadowRootInit = {mode: 'open', delegatesFocus: true};\n\n  /** @soyPrefixAttribute */\n  @ariaProperty\n  @property({type: String, attribute: 'aria-haspopup'})\n  ariaHasPopup!: AriaHasPopup;\n\n  @property({type: Boolean, reflect: true}) raised = false;\n\n  @property({type: Boolean, reflect: true}) unelevated = false;\n\n  @property({type: Boolean, reflect: true}) outlined = false;\n\n  @property({type: Boolean}) dense = false;\n\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  @property({type: Boolean, attribute: 'trailingicon'}) trailingIcon = false;\n\n  @property({type: Boolean, reflect: true}) fullwidth = false;\n\n  @property({type: String}) icon = '';\n\n  @property({type: String}) label = '';\n\n  @property({type: Boolean}) expandContent = false;\n\n  @query('#button') buttonElement!: HTMLElement;\n\n  @queryAsync('mwc-ripple') ripple!: Promise<Ripple|null>;\n\n  @state() protected shouldRenderRipple = false;\n\n  protected rippleHandlers = new RippleHandlers(() => {\n    this.shouldRenderRipple = true;\n    return this.ripple;\n  });\n\n  /** @soyTemplate */\n  protected renderOverlay(): TemplateResult {\n    return html``;\n  }\n\n  /** @soyTemplate */\n  protected renderRipple(): TemplateResult|string {\n    const filled = this.raised || this.unelevated;\n    return this.shouldRenderRipple ?\n        html`<mwc-ripple class=\"ripple\" .primary=\"${!filled}\" .disabled=\"${\n            this.disabled}\"></mwc-ripple>` :\n        '';\n  }\n\n  override focus() {\n    const buttonElement = this.buttonElement;\n    if (buttonElement) {\n      this.rippleHandlers.startFocus();\n      buttonElement.focus();\n    }\n  }\n\n  override blur() {\n    const buttonElement = this.buttonElement;\n    if (buttonElement) {\n      this.rippleHandlers.endFocus();\n      buttonElement.blur();\n    }\n  }\n\n  /** @soyTemplate */\n  protected getRenderClasses(): ClassInfo {\n    return {\n      'mdc-button--raised': this.raised,\n      'mdc-button--unelevated': this.unelevated,\n      'mdc-button--outlined': this.outlined,\n      'mdc-button--dense': this.dense,\n    };\n  }\n\n  /**\n   * @soyTemplate\n   * @soyAttributes buttonAttributes: #button\n   * @soyClasses buttonClasses: #button\n   */\n  protected override render(): TemplateResult {\n    return html`\n      <button\n          id=\"button\"\n          class=\"mdc-button ${classMap(this.getRenderClasses())}\"\n          ?disabled=\"${this.disabled}\"\n          aria-label=\"${this.label || this.icon}\"\n          aria-haspopup=\"${ifDefined(this.ariaHasPopup)}\"\n          @focus=\"${this.handleRippleFocus}\"\n          @blur=\"${this.handleRippleBlur}\"\n          @mousedown=\"${this.handleRippleActivate}\"\n          @mouseenter=\"${this.handleRippleMouseEnter}\"\n          @mouseleave=\"${this.handleRippleMouseLeave}\"\n          @touchstart=\"${this.handleRippleActivate}\"\n          @touchend=\"${this.handleRippleDeactivate}\"\n          @touchcancel=\"${this.handleRippleDeactivate}\">\n        ${this.renderOverlay()}\n        ${this.renderRipple()}\n        <span class=\"leading-icon\">\n          <slot name=\"icon\">\n            ${this.icon && !this.trailingIcon ? this.renderIcon() : ''}\n          </slot>\n        </span>\n        <span class=\"mdc-button__label\">${this.label}</span>\n        <span class=\"slot-container ${classMap({\n      flex: this.expandContent\n    })}\">\n          <slot></slot>\n        </span>\n        <span class=\"trailing-icon\">\n          <slot name=\"trailingIcon\">\n            ${this.icon && this.trailingIcon ? this.renderIcon() : ''}\n          </slot>\n        </span>\n      </button>`;\n  }\n\n  /** @soyTemplate */\n  protected renderIcon(): TemplateResult {\n    return html`\n    <mwc-icon class=\"mdc-button__icon\">\n      ${this.icon}\n    </mwc-icon>`;\n  }\n\n  @eventOptions({passive: true})\n  protected handleRippleActivate(evt?: Event) {\n    const onUp = () => {\n      window.removeEventListener('mouseup', onUp);\n\n      this.handleRippleDeactivate();\n    };\n\n    window.addEventListener('mouseup', onUp);\n    this.rippleHandlers.startPress(evt);\n  }\n\n  protected handleRippleDeactivate() {\n    this.rippleHandlers.endPress();\n  }\n\n  protected handleRippleMouseEnter() {\n    this.rippleHandlers.startHover();\n  }\n\n  protected handleRippleMouseLeave() {\n    this.rippleHandlers.endHover();\n  }\n\n  protected handleRippleFocus() {\n    this.rippleHandlers.startFocus();\n  }\n\n  protected handleRippleBlur() {\n    this.rippleHandlers.endFocus();\n  }\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {ButtonBase} from './mwc-button-base';\nimport {styles} from './styles.css';\n\n/** @soyCompatible */\n@customElement('mwc-button')\nexport class Button extends ButtonBase {\n  static override styles = [styles];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-button': Button;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
