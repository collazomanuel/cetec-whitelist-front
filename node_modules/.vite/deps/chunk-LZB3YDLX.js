// node_modules/@material/mwc-base/observer.js
var observer = (observer2) => (proto, propName) => {
  if (!proto.constructor._observers) {
    proto.constructor._observers = /* @__PURE__ */ new Map();
    const userUpdated = proto.updated;
    proto.updated = function(changedProperties) {
      userUpdated.call(this, changedProperties);
      changedProperties.forEach((v, k) => {
        const observers = this.constructor._observers;
        const observer3 = observers.get(k);
        if (observer3 !== void 0) {
          observer3.call(this, this[k], v);
        }
      });
    };
  } else if (!proto.constructor.hasOwnProperty("_observers")) {
    const observers = proto.constructor._observers;
    proto.constructor._observers = /* @__PURE__ */ new Map();
    observers.forEach((v, k) => proto.constructor._observers.set(k, v));
  }
  proto.constructor._observers.set(propName, observer2);
};

export {
  observer
};
/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
//# sourceMappingURL=chunk-LZB3YDLX.js.map
