{
  "version": 3,
  "sources": ["../../@material/mwc-base/form-element.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport {property} from 'lit/decorators.js';\n\nimport {addHasRemoveClass, BaseElement, CustomEventListener, EventType, SpecificEventListener} from './base-element';\nimport {RippleInterface} from './utils';\n\nexport {\n  addHasRemoveClass,\n  BaseElement,\n  CustomEventListener,\n  EventType,\n  RippleInterface,\n  SpecificEventListener\n};\n\ndeclare global {\n  interface FormDataEvent extends Event {\n    readonly formData: FormData;\n  }\n\n  interface HTMLElementEventMap {\n    formdata: FormDataEvent;\n  }\n}\n\n// ShadyDOM should submit <input> elements in component internals\nconst USING_SHADY_DOM = window.ShadyDOM?.inUse ?? false;\n\n/** @soyCompatible */\nexport abstract class FormElement extends BaseElement {\n  static override shadowRootOptions:\n      ShadowRootInit = {mode: 'open', delegatesFocus: true};\n\n  /**\n   * Form-capable element in the component ShadowRoot.\n   *\n   * Define in your component with the `@query` decorator\n   */\n  protected abstract formElement: HTMLElement;\n\n  /**\n   * Disabled state for the component. When `disabled` is set to `true`, the\n   * component will not be added to form submission.\n   */\n  @property({type: Boolean}) disabled = false;\n\n  /**\n   * Implement ripple getter for Ripple integration with mwc-formfield\n   */\n  readonly ripple?: Promise<RippleInterface|null>;\n\n  /**\n   * Form element that contains this element\n   */\n  protected containingForm: HTMLFormElement|null = null;\n  protected formDataListener = (ev: FormDataEvent) => {\n    if (!this.disabled) {\n      this.setFormData(ev.formData);\n    }\n  };\n\n  protected findFormElement(): HTMLFormElement|null {\n    // If the component internals are not in Shadow DOM, subscribing to form\n    // data events could lead to duplicated data, which may not work correctly\n    // on the server side.\n    if (!this.shadowRoot || USING_SHADY_DOM) {\n      return null;\n    }\n    const root = this.getRootNode() as HTMLElement;\n    const forms = root.querySelectorAll('form');\n    for (const form of Array.from(forms)) {\n      if (form.contains(this)) {\n        return form;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Implement this callback to submit form data\n   */\n  protected abstract setFormData(formData: FormData): void;\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.containingForm = this.findFormElement();\n    this.containingForm?.addEventListener('formdata', this.formDataListener);\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.containingForm?.removeEventListener('formdata', this.formDataListener);\n    this.containingForm = null;\n  }\n\n  override click() {\n    if (this.formElement && !this.disabled) {\n      this.formElement.focus();\n      this.formElement.click();\n    }\n  }\n\n  protected override firstUpdated() {\n    super.firstUpdated();\n    if (this.shadowRoot) {\n      this.mdcRoot.addEventListener('change', (e) => {\n        this.dispatchEvent(new Event('change', e));\n      });\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;AAAA;;AAmCA,IAAM,kBAAkB,MAAA,MAAA,OAAO,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAE,WAAK,QAAA,OAAA,SAAA,KAAI;AAG5C,gCAAoC,YAAW;EAArD,cAAA;;AAe6B,SAAA,WAAW;AAU5B,SAAA,iBAAuC;AACvC,SAAA,mBAAmB,CAAC,OAAqB;AACjD,UAAI,CAAC,KAAK,UAAU;AAClB,aAAK,YAAY,GAAG,QAAQ;;IAEhC;EAmDF;EAjDY,kBAAe;AAIvB,QAAI,CAAC,KAAK,cAAc,iBAAiB;AACvC,aAAO;;AAET,UAAM,OAAO,KAAK,YAAW;AAC7B,UAAM,QAAQ,KAAK,iBAAiB,MAAM;AAC1C,eAAW,QAAQ,MAAM,KAAK,KAAK,GAAG;AACpC,UAAI,KAAK,SAAS,IAAI,GAAG;AACvB,eAAO;;;AAGX,WAAO;EACT;EAOS,oBAAiB;;AACxB,UAAM,kBAAiB;AACvB,SAAK,iBAAiB,KAAK,gBAAe;AAC1C,IAAA,OAAA,KAAK,oBAAc,QAAA,QAAA,SAAA,SAAA,IAAE,iBAAiB,YAAY,KAAK,gBAAgB;EACzE;EAES,uBAAoB;;AAC3B,UAAM,qBAAoB;AAC1B,IAAA,OAAA,KAAK,oBAAc,QAAA,QAAA,SAAA,SAAA,IAAE,oBAAoB,YAAY,KAAK,gBAAgB;AAC1E,SAAK,iBAAiB;EACxB;EAES,QAAK;AACZ,QAAI,KAAK,eAAe,CAAC,KAAK,UAAU;AACtC,WAAK,YAAY,MAAK;AACtB,WAAK,YAAY,MAAK;;EAE1B;EAEmB,eAAY;AAC7B,UAAM,aAAY;AAClB,QAAI,KAAK,YAAY;AACnB,WAAK,QAAQ,iBAAiB,UAAU,CAAC,MAAK;AAC5C,aAAK,cAAc,IAAI,MAAM,UAAU,CAAC,CAAC;MAC3C,CAAC;;EAEL;;AA/EgB,YAAA,oBACK,EAAC,MAAM,QAAQ,gBAAgB,KAAI;AAa7B,WAAA;EAA1B,SAAS,EAAC,MAAM,QAAO,CAAC;;",
  "names": []
}
