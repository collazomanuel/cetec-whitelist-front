{
  "version": 3,
  "sources": ["../../@material/dom/keyboard.ts", "../../@material/list/constants.ts", "../../@material/mwc-list/mwc-list-foundation.ts", "../../@material/mwc-list/mwc-list-base.ts", "../../@material/mwc-list/mwc-list.ts"],
  "sourcesContent": [null, null, "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport {MDCFoundation} from '@material/base/foundation';\nimport {normalizeKey} from '@material/dom/keyboard';\nimport {numbers, strings} from '@material/list/constants';\n\nimport {MDCListAdapter} from './mwc-list-adapter';\n\nexport type MWCListIndex = number|Set<number>;\n\nexport interface IndexDiff {\n  added: number[];\n  removed: number[];\n}\n\nexport interface SelectedDetail<T extends MWCListIndex = MWCListIndex> {\n  index: T;\n  diff: T extends Set<number>? IndexDiff: undefined;\n}\n\nexport interface ActionDetail {\n  index: number;\n}\n\nconst integerSort = (a: number, b: number) => {\n  return a - b;\n};\n\nexport type SingleSelectedEvent = CustomEvent<SelectedDetail<number>>;\nexport type MultiSelectedEvent = CustomEvent<SelectedDetail<Set<number>>>;\nexport type SelectedEvent = SingleSelectedEvent|MultiSelectedEvent;\n\nconst findIndexDiff = (oldSet: Set<number>, newSet: Set<number>): IndexDiff => {\n  const oldArr = Array.from(oldSet);\n  const newArr = Array.from(newSet);\n  const diff: IndexDiff = {added: [], removed: []};\n  const oldSorted = oldArr.sort(integerSort);\n  const newSorted = newArr.sort(integerSort);\n\n  let i = 0;\n  let j = 0;\n  while (i < oldSorted.length || j < newSorted.length) {\n    const oldVal = oldSorted[i];\n    const newVal = newSorted[j];\n\n    if (oldVal === newVal) {\n      i++;\n      j++;\n      continue;\n    }\n\n    if (oldVal !== undefined && (newVal === undefined || oldVal < newVal)) {\n      diff.removed.push(oldVal);\n      i++;\n      continue;\n    }\n\n    if (newVal !== undefined && (oldVal === undefined || newVal < oldVal)) {\n      diff.added.push(newVal);\n      j++;\n      continue;\n    }\n  }\n\n  return diff;\n};\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nexport function isIndexSet(selectedIndex: MWCListIndex):\n    selectedIndex is Set<number> {\n  return selectedIndex instanceof Set;\n}\n\nexport function isEventMulti(evt: SelectedEvent): evt is MultiSelectedEvent {\n  return isIndexSet(evt.detail.index);\n}\n\nexport const createSetFromIndex = (index: MWCListIndex) => {\n  const entry = index === numbers.UNSET_INDEX ? new Set<number>() : index;\n  return isIndexSet(entry) ? new Set(entry) : new Set([entry]);\n};\n\nexport class MDCListFoundation extends MDCFoundation<MDCListAdapter> {\n  static override get strings() {\n    return strings;\n  }\n\n  static override get numbers() {\n    return numbers;\n  }\n\n\n  static override get defaultAdapter(): MDCListAdapter {\n    return {\n      focusItemAtIndex: () => undefined,\n      getFocusedElementIndex: () => 0,\n      getListItemCount: () => 0,\n      isFocusInsideList: () => false,\n      isRootFocused: () => false,\n      notifyAction: () => undefined,\n      notifySelected: () => undefined,\n      getSelectedStateForElementIndex: () => false,\n      setDisabledStateForElementIndex: () => undefined,\n      getDisabledStateForElementIndex: () => false,\n      setSelectedStateForElementIndex: () => undefined,\n      setActivatedStateForElementIndex: () => undefined,\n      setTabIndexForElementIndex: () => undefined,\n      setAttributeForElementIndex: () => undefined,\n      getAttributeForElementIndex: () => null,\n    };\n  }\n\n  protected isMulti_ = false;\n  private wrapFocus_ = false;\n  private isVertical_ = true;\n  private selectedIndex_: MWCListIndex = numbers.UNSET_INDEX;\n  private focusedItemIndex_ = numbers.UNSET_INDEX;\n  private useActivatedClass_ = false;\n  private ariaCurrentAttrValue_: string|null = null;\n\n  constructor(adapter?: Partial<MDCListAdapter>) {\n    super({...MDCListFoundation.defaultAdapter, ...adapter});\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   */\n  setWrapFocus(value: boolean) {\n    this.wrapFocus_ = value;\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   */\n  setMulti(value: boolean) {\n    this.isMulti_ = value;\n\n    const currentIndex = this.selectedIndex_;\n\n    if (value) {\n      // number to set\n      if (!isIndexSet(currentIndex)) {\n        const isUnset = currentIndex === numbers.UNSET_INDEX;\n        this.selectedIndex_ = isUnset ? new Set() : new Set([currentIndex]);\n      }\n    } else {\n      // set to first sorted number in set\n      if (isIndexSet(currentIndex)) {\n        if (currentIndex.size) {\n          const vals = Array.from(currentIndex).sort(integerSort);\n          this.selectedIndex_ = vals[0];\n        } else {\n          this.selectedIndex_ = numbers.UNSET_INDEX;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets the isVertical_ private variable.\n   */\n  setVerticalOrientation(value: boolean) {\n    this.isVertical_ = value;\n  }\n\n  /**\n   * Sets the useActivatedClass_ private variable.\n   */\n  setUseActivatedClass(useActivated: boolean) {\n    this.useActivatedClass_ = useActivated;\n  }\n\n  getSelectedIndex(): MWCListIndex {\n    return this.selectedIndex_;\n  }\n\n  setSelectedIndex(index: MWCListIndex) {\n    if (!this.isIndexValid_(index)) {\n      return;\n    }\n\n    if (this.isMulti_) {\n      this.setMultiSelectionAtIndex_(createSetFromIndex(index));\n    } else {\n      this.setSingleSelectionAtIndex_(index as number);\n    }\n  }\n\n  /**\n   * Focus in handler for the list items.\n   */\n  handleFocusIn(_: FocusEvent, listItemIndex: number) {\n    if (listItemIndex >= 0) {\n      this.adapter.setTabIndexForElementIndex(listItemIndex, 0);\n    }\n  }\n\n  /**\n   * Focus out handler for the list items.\n   */\n  handleFocusOut(_: FocusEvent, listItemIndex: number) {\n    if (listItemIndex >= 0) {\n      this.adapter.setTabIndexForElementIndex(listItemIndex, -1);\n    }\n\n    /**\n     * Between Focusout & Focusin some browsers do not have focus on any\n     * element. Setting a delay to wait till the focus is moved to next element.\n     */\n    setTimeout(() => {\n      if (!this.adapter.isFocusInsideList()) {\n        this.setTabindexToFirstSelectedItem_();\n      }\n    }, 0);\n  }\n\n  /**\n   * Key handler for the list.\n   */\n  handleKeydown(\n      event: KeyboardEvent, isRootListItem: boolean, listItemIndex: number) {\n    const isArrowLeft = normalizeKey(event) === 'ArrowLeft';\n    const isArrowUp = normalizeKey(event) === 'ArrowUp';\n    const isArrowRight = normalizeKey(event) === 'ArrowRight';\n    const isArrowDown = normalizeKey(event) === 'ArrowDown';\n    const isHome = normalizeKey(event) === 'Home';\n    const isEnd = normalizeKey(event) === 'End';\n    const isEnter = normalizeKey(event) === 'Enter';\n    const isSpace = normalizeKey(event) === 'Spacebar';\n\n    if (this.adapter.isRootFocused()) {\n      if (isArrowUp || isEnd) {\n        event.preventDefault();\n        this.focusLastElement();\n      } else if (isArrowDown || isHome) {\n        event.preventDefault();\n        this.focusFirstElement();\n      }\n\n      return;\n    }\n\n    let currentIndex = this.adapter.getFocusedElementIndex();\n    if (currentIndex === -1) {\n      currentIndex = listItemIndex;\n      if (currentIndex < 0) {\n        // If this event doesn't have a mdc-deprecated-list-item ancestor from\n        // the current list (not from a sublist), return early.\n        return;\n      }\n    }\n\n    let nextIndex;\n    if ((this.isVertical_ && isArrowDown) ||\n        (!this.isVertical_ && isArrowRight)) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusNextElement(currentIndex);\n    } else if (\n        (this.isVertical_ && isArrowUp) || (!this.isVertical_ && isArrowLeft)) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusPrevElement(currentIndex);\n    } else if (isHome) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusFirstElement();\n    } else if (isEnd) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusLastElement();\n    } else if (isEnter || isSpace) {\n      if (isRootListItem) {\n        // Return early if enter key is pressed on anchor element which triggers\n        // synthetic MouseEvent event.\n        const target = event.target as Element | null;\n        if (target && target.tagName === 'A' && isEnter) {\n          return;\n        }\n        this.preventDefaultEvent(event);\n        this.setSelectedIndexOnAction_(currentIndex, true);\n      }\n    }\n\n    this.focusedItemIndex_ = currentIndex;\n\n    if (nextIndex !== undefined) {\n      this.setTabindexAtIndex_(nextIndex);\n      this.focusedItemIndex_ = nextIndex;\n    }\n  }\n\n  /**\n   * Click handler for the list.\n   */\n  handleSingleSelection(\n      index: number, isInteraction: boolean, force?: boolean) {\n    if (index === numbers.UNSET_INDEX) {\n      return;\n    }\n\n    this.setSelectedIndexOnAction_(index, isInteraction, force);\n    this.setTabindexAtIndex_(index);\n    this.focusedItemIndex_ = index;\n  }\n\n  /**\n   * Focuses the next element on the list.\n   */\n  focusNextElement(index: number) {\n    const count = this.adapter.getListItemCount();\n    let nextIndex = index + 1;\n    if (nextIndex >= count) {\n      if (this.wrapFocus_) {\n        nextIndex = 0;\n      } else {\n        // Return early because last item is already focused.\n        return index;\n      }\n    }\n    this.adapter.focusItemAtIndex(nextIndex);\n\n    return nextIndex;\n  }\n\n  /**\n   * Focuses the previous element on the list.\n   */\n  focusPrevElement(index: number) {\n    let prevIndex = index - 1;\n    if (prevIndex < 0) {\n      if (this.wrapFocus_) {\n        prevIndex = this.adapter.getListItemCount() - 1;\n      } else {\n        // Return early because first item is already focused.\n        return index;\n      }\n    }\n    this.adapter.focusItemAtIndex(prevIndex);\n\n    return prevIndex;\n  }\n\n  focusFirstElement() {\n    this.adapter.focusItemAtIndex(0);\n    return 0;\n  }\n\n  focusLastElement() {\n    const lastIndex = this.adapter.getListItemCount() - 1;\n    this.adapter.focusItemAtIndex(lastIndex);\n    return lastIndex;\n  }\n\n  /**\n   * @param itemIndex Index of the list item\n   * @param isEnabled Sets the list item to enabled or disabled.\n   */\n  setEnabled(itemIndex: number, isEnabled: boolean): void {\n    if (!this.isIndexValid_(itemIndex)) {\n      return;\n    }\n\n    this.adapter.setDisabledStateForElementIndex(itemIndex, !isEnabled);\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element\n   * doesn't consume the event, and it will cause an unintended scroll.\n   */\n  private preventDefaultEvent(evt: KeyboardEvent) {\n    const target = evt.target as Element;\n    const tagName = `${target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n\n  private setSingleSelectionAtIndex_(index: number, isInteraction = true) {\n    if (this.selectedIndex_ === index) {\n      return;\n    }\n\n    // unset previous\n    if (this.selectedIndex_ !== numbers.UNSET_INDEX) {\n      this.adapter.setSelectedStateForElementIndex(\n          this.selectedIndex_ as number, false);\n      if (this.useActivatedClass_) {\n        this.adapter.setActivatedStateForElementIndex(\n            this.selectedIndex_ as number, false);\n      }\n    }\n\n    // set new\n    if (isInteraction) {\n      this.adapter.setSelectedStateForElementIndex(index, true);\n    }\n    if (this.useActivatedClass_) {\n      this.adapter.setActivatedStateForElementIndex(index, true);\n    }\n    this.setAriaForSingleSelectionAtIndex_(index);\n\n    this.selectedIndex_ = index;\n\n    this.adapter.notifySelected(index);\n  }\n\n  private setMultiSelectionAtIndex_(\n      newIndex: Set<number>, isInteraction = true) {\n    const oldIndex = createSetFromIndex(this.selectedIndex_);\n    const diff = findIndexDiff(oldIndex, newIndex);\n\n    if (!diff.removed.length && !diff.added.length) {\n      return;\n    }\n\n    for (const removed of diff.removed) {\n      if (isInteraction) {\n        this.adapter.setSelectedStateForElementIndex(removed, false);\n      }\n\n      if (this.useActivatedClass_) {\n        this.adapter.setActivatedStateForElementIndex(removed, false);\n      }\n    }\n\n    for (const added of diff.added) {\n      if (isInteraction) {\n        this.adapter.setSelectedStateForElementIndex(added, true);\n      }\n\n      if (this.useActivatedClass_) {\n        this.adapter.setActivatedStateForElementIndex(added, true);\n      }\n    }\n\n    this.selectedIndex_ = newIndex;\n\n    this.adapter.notifySelected(newIndex, diff);\n  }\n\n  /**\n   * Sets aria attribute for single selection at given index.\n   */\n  private setAriaForSingleSelectionAtIndex_(index: number) {\n    // Detect the presence of aria-current and get the value only during list\n    // initialization when it is in unset state.\n    if (this.selectedIndex_ === numbers.UNSET_INDEX) {\n      this.ariaCurrentAttrValue_ =\n          this.adapter.getAttributeForElementIndex(index, strings.ARIA_CURRENT);\n    }\n\n    const isAriaCurrent = this.ariaCurrentAttrValue_ !== null;\n    const ariaAttribute =\n        isAriaCurrent ? strings.ARIA_CURRENT : strings.ARIA_SELECTED;\n\n    if (this.selectedIndex_ !== numbers.UNSET_INDEX) {\n      this.adapter.setAttributeForElementIndex(\n          this.selectedIndex_ as number, ariaAttribute, 'false');\n    }\n\n    const ariaAttributeValue =\n        isAriaCurrent ? this.ariaCurrentAttrValue_ : 'true';\n    this.adapter.setAttributeForElementIndex(\n        index, ariaAttribute, ariaAttributeValue as string);\n  }\n\n  private setTabindexAtIndex_(index: number) {\n    if (this.focusedItemIndex_ === numbers.UNSET_INDEX && index !== 0) {\n      // If no list item was selected set first list item's tabindex to -1.\n      // Generally, tabindex is set to 0 on first list item of list that has no\n      // preselected items.\n      this.adapter.setTabIndexForElementIndex(0, -1);\n    } else if (\n        this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n      this.adapter.setTabIndexForElementIndex(this.focusedItemIndex_, -1);\n    }\n\n    this.adapter.setTabIndexForElementIndex(index, 0);\n  }\n\n  private setTabindexToFirstSelectedItem_() {\n    let targetIndex = 0;\n\n    if (typeof this.selectedIndex_ === 'number' &&\n        this.selectedIndex_ !== numbers.UNSET_INDEX) {\n      targetIndex = this.selectedIndex_;\n    } else if (\n        isIndexSet(this.selectedIndex_) && this.selectedIndex_.size > 0) {\n      targetIndex = Math.min(...this.selectedIndex_);\n    }\n\n    this.setTabindexAtIndex_(targetIndex);\n  }\n\n  private isIndexValid_(index: MWCListIndex) {\n    if (index instanceof Set) {\n      if (!this.isMulti_) {\n        throw new Error(\n            'MDCListFoundation: Array of index is only supported for checkbox based list');\n      }\n\n      if (index.size === 0) {\n        return true;\n      } else {\n        let isOneInRange = false;\n\n        for (const entry of index) {\n          isOneInRange = this.isIndexInRange_(entry);\n\n          if (isOneInRange) {\n            break;\n          }\n        }\n\n        return isOneInRange;\n      }\n    } else if (typeof index === 'number') {\n      if (this.isMulti_) {\n        throw new Error(\n            'MDCListFoundation: Expected array of index for checkbox based list but got number: ' +\n            index);\n      }\n      return index === numbers.UNSET_INDEX || this.isIndexInRange_(index);\n    } else {\n      return false;\n    }\n  }\n\n  private isIndexInRange_(index: number) {\n    const listSize = this.adapter.getListItemCount();\n    return index >= 0 && index < listSize;\n  }\n\n  /**\n   * Sets selected index on user action, toggles checkbox / radio based on\n   * toggleCheckbox value. User interaction should not toggle list item(s) when\n   * disabled.\n   */\n  private setSelectedIndexOnAction_(\n      index: number, isInteraction: boolean, force?: boolean) {\n    if (this.adapter.getDisabledStateForElementIndex(index)) {\n      return;\n    }\n\n    let checkedIndex: MWCListIndex = index;\n\n    if (this.isMulti_) {\n      checkedIndex = new Set([index]);\n    }\n\n    if (!this.isIndexValid_(checkedIndex)) {\n      return;\n    }\n\n    if (this.isMulti_) {\n      this.toggleMultiAtIndex(index, force, isInteraction);\n    } else {\n      if (isInteraction || force) {\n        this.setSingleSelectionAtIndex_(index, isInteraction);\n      } else {\n        const isDeselection = this.selectedIndex_ === index;\n        if (isDeselection) {\n          this.setSingleSelectionAtIndex_(numbers.UNSET_INDEX);\n        }\n      }\n    }\n\n    if (isInteraction) {\n      this.adapter.notifyAction(index);\n    }\n  }\n\n  toggleMultiAtIndex(index: number, force?: boolean, isInteraction = true) {\n    let newSelectionValue = false;\n\n    if (force === undefined) {\n      newSelectionValue = !this.adapter.getSelectedStateForElementIndex(index);\n    } else {\n      newSelectionValue = force;\n    }\n\n    const newSet = createSetFromIndex(this.selectedIndex_);\n\n    if (newSelectionValue) {\n      newSet.add(index);\n    } else {\n      newSet.delete(index);\n    }\n\n    this.setMultiSelectionAtIndex_(newSet, isInteraction);\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility\n// with MDC Web v0.44.0 and earlier.\nexport default MDCListFoundation;\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport './mwc-list-item';\n\nimport {BaseElement} from '@material/mwc-base/base-element';\nimport {observer} from '@material/mwc-base/observer';\nimport {deepActiveElementPath, doesElementContainFocus, isNodeElement} from '@material/mwc-base/utils';\nimport {html} from 'lit';\nimport {property, query, queryAssignedNodes} from 'lit/decorators.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\nimport {MDCListAdapter} from './mwc-list-adapter';\nimport MDCListFoundation, {ActionDetail, isIndexSet, SelectedDetail} from './mwc-list-foundation';\nimport {MWCListIndex} from './mwc-list-foundation';\nimport {Layoutable, ListItemBase, RequestSelectedDetail} from './mwc-list-item-base';\n\nexport {ActionDetail, createSetFromIndex, isEventMulti, isIndexSet, MultiSelectedEvent, MWCListIndex, SelectedDetail, SelectedEvent, SingleSelectedEvent} from './mwc-list-foundation';\n\nfunction debounceLayout(\n    callback: (updateItems: boolean) => void, waitInMS = 50) {\n  let timeoutId: number;\n  // tslint:disable-next-line\n  return function(updateItems = true) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n                  callback(updateItems);\n                }, waitInMS) as unknown as number;\n  };\n}\n\nconst isListItem = (element: Element): element is ListItemBase => {\n  return element.hasAttribute('mwc-list-item');\n};\n\nfunction clearAndCreateItemsReadyPromise(this: ListBase) {\n  const oldResolver = this.itemsReadyResolver;\n  this.itemsReady = new Promise((res) => {\n    // TODO(b/175626389): Type '(value: never[] | PromiseLike<never[]>) => void'\n    // is not assignable to type '(value?: never[] | PromiseLike<never[]> |\n    // undefined) => void'.\n    return this.itemsReadyResolver = res as any;\n  });\n  oldResolver();\n}\n\n/**\n * @fires selected {SelectedDetail}\n * @fires action {ActionDetail}\n * @fires items-updated\n */\nexport abstract class ListBase extends BaseElement implements Layoutable {\n  protected mdcFoundation!: MDCListFoundation;\n  protected mdcAdapter: MDCListAdapter|null = null;\n\n  protected readonly mdcFoundationClass = MDCListFoundation;\n\n  @property({type: String}) emptyMessage: string|undefined;\n\n  @query('.mdc-deprecated-list') protected mdcRoot!: HTMLElement;\n\n  @queryAssignedNodes('', true, '*')\n  protected assignedElements!: HTMLElement[]|null;\n  @queryAssignedNodes('', true, '[tabindex=\"0\"]')\n  protected tabbableElements!: HTMLElement[]|null;\n\n  @property({type: Boolean})\n  @observer(function(this: ListBase, value: boolean) {\n    if (this.mdcFoundation) {\n      this.mdcFoundation.setUseActivatedClass(value);\n    }\n  })\n  activatable = false;\n\n  @property({type: Boolean})\n  @observer(function(this: ListBase, newValue: boolean, oldValue: boolean) {\n    if (this.mdcFoundation) {\n      this.mdcFoundation.setMulti(newValue);\n    }\n\n    if (oldValue !== undefined) {\n      this.layout();\n    }\n  })\n  multi = false;\n\n  @property({type: Boolean})\n  @observer(function(this: ListBase, value: boolean) {\n    if (this.mdcFoundation) {\n      this.mdcFoundation.setWrapFocus(value);\n    }\n  })\n  wrapFocus = false;\n\n  @property({type: String})\n  @observer(function(this: ListBase, _newValue, oldValue: string|null) {\n    if (oldValue !== undefined) {\n      this.updateItems();\n    }\n  })\n  itemRoles: string|null = null;\n\n  @property({type: String}) innerRole: string|null = null;\n\n  @property({type: String}) innerAriaLabel: string|null = null;\n\n  @property({type: Boolean}) rootTabbable = false;\n\n  protected previousTabindex: Element|null = null;\n\n  @property({type: Boolean, reflect: true})\n  @observer(function(this: ListBase, value: boolean) {\n    if (value) {\n      const tabbable = this.tabbableElements?.[0] ?? null;\n      this.previousTabindex = tabbable;\n      if (tabbable) {\n        tabbable.setAttribute('tabindex', '-1');\n      }\n    } else if (!value && this.previousTabindex) {\n      this.previousTabindex.setAttribute('tabindex', '0');\n      this.previousTabindex = null;\n    }\n  })\n  noninteractive = false;\n\n  debouncedLayout: (updateItems?: boolean) => void | undefined;\n  protected itemsReadyResolver:\n      (value?: (PromiseLike<never[]>|never[]|undefined)) => void =\n          (() => {\n               //\n           }) as(value?: (PromiseLike<unknown[]>|unknown[])) => void;\n\n  constructor() {\n    super();\n    const debouncedFunction = debounceLayout(this.layout.bind(this));\n    this.debouncedLayout = (updateItems = true) => {\n      clearAndCreateItemsReadyPromise.call(this);\n\n      debouncedFunction(updateItems);\n    };\n  }\n\n  itemsReady = Promise.resolve([]);\n\n  // tslint:disable:ban-ts-ignore\n  protected override async getUpdateComplete() {\n    // @ts-ignore\n    const result = await super.getUpdateComplete();\n    await this.itemsReady;\n    return result;\n  }\n  // tslint:enable:ban-ts-ignore\n\n\n  protected items_: ListItemBase[] = [];\n\n  get items(): ListItemBase[] {\n    return this.items_;\n  }\n\n  protected updateItems() {\n    const nodes = this.assignedElements ?? [];\n    const listItems: ListItemBase[] = [];\n\n    for (const node of nodes) {\n      if (isListItem(node)) {\n        listItems.push(node);\n        node._managingList = this;\n      }\n\n      if (node.hasAttribute('divider') && !node.hasAttribute('role')) {\n        node.setAttribute('role', 'separator');\n      }\n    }\n\n    this.items_ = listItems;\n    const selectedIndices = new Set<number>();\n\n    this.items_.forEach((item, index) => {\n      if (this.itemRoles) {\n        item.setAttribute('role', this.itemRoles);\n      } else {\n        item.removeAttribute('role');\n      }\n\n      if (item.selected) {\n        selectedIndices.add(index);\n      }\n    });\n\n    if (this.multi) {\n      this.select(selectedIndices);\n    } else {\n      const index =\n          selectedIndices.size ? selectedIndices.entries().next().value[1] : -1;\n      this.select(index);\n    }\n\n    const itemsUpdatedEv =\n        new Event('items-updated', {bubbles: true, composed: true});\n    this.dispatchEvent(itemsUpdatedEv);\n  }\n\n  get selected(): ListItemBase|ListItemBase[]|null {\n    const index = this.index;\n\n    if (!isIndexSet(index)) {\n      if (index === -1) {\n        return null;\n      }\n\n      return this.items[index];\n    }\n\n    const selected: ListItemBase[] = [];\n\n    for (const entry of index) {\n      selected.push(this.items[entry]);\n    }\n\n    return selected;\n  }\n\n  get index(): MWCListIndex {\n    if (this.mdcFoundation) {\n      return this.mdcFoundation.getSelectedIndex();\n    }\n\n    return -1;\n  }\n\n  override render() {\n    const role = this.innerRole === null ? undefined : this.innerRole;\n    const ariaLabel =\n        this.innerAriaLabel === null ? undefined : this.innerAriaLabel;\n    const tabindex = this.rootTabbable ? '0' : '-1';\n\n    return html`\n      <!-- @ts-ignore -->\n      <ul\n          tabindex=${tabindex}\n          role=\"${ifDefined(role)}\"\n          aria-label=\"${ifDefined(ariaLabel)}\"\n          class=\"mdc-deprecated-list\"\n          @keydown=${this.onKeydown}\n          @focusin=${this.onFocusIn}\n          @focusout=${this.onFocusOut}\n          @request-selected=${this.onRequestSelected}\n          @list-item-rendered=${this.onListItemConnected}>\n        <slot></slot>\n        ${this.renderPlaceholder()}\n      </ul>\n    `;\n  }\n\n  renderPlaceholder() {\n    const nodes = this.assignedElements ?? [];\n    if (this.emptyMessage !== undefined && nodes.length === 0) {\n      return html`\n        <mwc-list-item noninteractive>${this.emptyMessage}</mwc-list-item>\n      `;\n    }\n\n    return null;\n  }\n\n  override firstUpdated() {\n    super.firstUpdated();\n\n    if (!this.items.length) {\n      // required because this is called before observers\n      this.mdcFoundation.setMulti(this.multi);\n      // for when children upgrade before list\n      this.layout();\n    }\n  }\n\n  protected onFocusIn(evt: FocusEvent) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      this.mdcFoundation.handleFocusIn(evt, index);\n    }\n  }\n\n  protected onFocusOut(evt: FocusEvent) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      this.mdcFoundation.handleFocusOut(evt, index);\n    }\n  }\n\n  protected onKeydown(evt: KeyboardEvent) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      const target = evt.target as Element;\n      const isRootListItem = isListItem(target);\n      this.mdcFoundation.handleKeydown(evt, isRootListItem, index);\n    }\n  }\n\n  protected onRequestSelected(evt: CustomEvent<RequestSelectedDetail>) {\n    if (this.mdcFoundation) {\n      let index = this.getIndexOfTarget(evt);\n\n      // might happen in shady dom slowness. Recalc children\n      if (index === -1) {\n        this.layout();\n        index = this.getIndexOfTarget(evt);\n\n        // still not found; may not be mwc-list-item. Unsupported case.\n        if (index === -1) {\n          return;\n        }\n      }\n\n      const element = this.items[index];\n\n      if (element.disabled) {\n        return;\n      }\n\n      const selected = evt.detail.selected;\n      const source = evt.detail.source;\n\n      this.mdcFoundation.handleSingleSelection(\n          index, source === 'interaction', selected);\n\n      evt.stopPropagation();\n    }\n  }\n\n  protected getIndexOfTarget(evt: Event): number {\n    const elements = this.items;\n    const path = evt.composedPath();\n\n    for (const pathItem of path as Node[]) {\n      let index = -1;\n      if (isNodeElement(pathItem) && isListItem(pathItem)) {\n        index = elements.indexOf(pathItem);\n      }\n\n      if (index !== -1) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n\n  protected createAdapter(): MDCListAdapter {\n    this.mdcAdapter = {\n      getListItemCount: () => {\n        if (this.mdcRoot) {\n          return this.items.length;\n        }\n\n        return 0;\n      },\n      getFocusedElementIndex: this.getFocusedItemIndex,\n      getAttributeForElementIndex: (index, attr) => {\n        const listElement = this.mdcRoot;\n        if (!listElement) {\n          return '';\n        }\n\n        const element = this.items[index];\n        return element ? element.getAttribute(attr) : '';\n      },\n      setAttributeForElementIndex: (index, attr, val) => {\n        if (!this.mdcRoot) {\n          return;\n        }\n\n        const element = this.items[index];\n\n        if (element) {\n          element.setAttribute(attr, val);\n        }\n      },\n      focusItemAtIndex: (index) => {\n        const element = this.items[index];\n        if (element) {\n          element.focus();\n        }\n      },\n      setTabIndexForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (item) {\n          item.tabindex = value;\n        }\n      },\n      notifyAction: (index) => {\n        const init: CustomEventInit = {bubbles: true, composed: true};\n        init.detail = {index};\n        const ev = new CustomEvent<ActionDetail>('action', init);\n        this.dispatchEvent(ev);\n      },\n      notifySelected: (index, diff) => {\n        const init: CustomEventInit = {bubbles: true, composed: true};\n        init.detail = {index, diff};\n        const ev = new CustomEvent<SelectedDetail>('selected', init);\n        this.dispatchEvent(ev);\n      },\n      isFocusInsideList: () => {\n        return doesElementContainFocus(this);\n      },\n      isRootFocused: () => {\n        const mdcRoot = this.mdcRoot;\n        const root = mdcRoot.getRootNode() as unknown as DocumentOrShadowRoot;\n        return root.activeElement === mdcRoot;\n      },\n      setDisabledStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return;\n        }\n\n        item.disabled = value;\n      },\n      getDisabledStateForElementIndex: (index) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return false;\n        }\n\n        return item.disabled;\n      },\n      setSelectedStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return;\n        }\n\n        item.selected = value;\n      },\n      getSelectedStateForElementIndex: (index) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return false;\n        }\n\n        return item.selected;\n      },\n      setActivatedStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return;\n        }\n\n        item.activated = value;\n      },\n    };\n\n    return this.mdcAdapter;\n  }\n\n  protected selectUi(index: number, activate = false) {\n    const item = this.items[index];\n    if (item) {\n      item.selected = true;\n      item.activated = activate;\n    }\n  }\n\n  protected deselectUi(index: number) {\n    const item = this.items[index];\n    if (item) {\n      item.selected = false;\n      item.activated = false;\n    }\n  }\n\n  select(index: MWCListIndex) {\n    if (!this.mdcFoundation) {\n      return;\n    }\n\n    this.mdcFoundation.setSelectedIndex(index);\n  }\n\n  toggle(index: number, force?: boolean) {\n    if (this.multi) {\n      this.mdcFoundation.toggleMultiAtIndex(index, force);\n    }\n  }\n\n  protected onListItemConnected(e: CustomEvent) {\n    const target = e.target as ListItemBase;\n\n    this.layout(this.items.indexOf(target) === -1);\n  }\n\n  layout(updateItems = true) {\n    if (updateItems) {\n      this.updateItems();\n    }\n\n    const first: ListItemBase|undefined = this.items[0];\n\n    for (const item of this.items) {\n      item.tabindex = -1;\n    }\n\n    if (first) {\n      if (this.noninteractive) {\n        if (!this.previousTabindex) {\n          this.previousTabindex = first;\n        }\n      } else {\n        first.tabindex = 0;\n      }\n    }\n\n    this.itemsReadyResolver();\n  }\n\n  getFocusedItemIndex() {\n    if (!this.mdcRoot) {\n      return -1;\n    }\n\n    if (!this.items.length) {\n      return -1;\n    }\n\n    const activeElementPath = deepActiveElementPath();\n\n    if (!activeElementPath.length) {\n      return -1;\n    }\n\n    for (let i = activeElementPath.length - 1; i >= 0; i--) {\n      const activeItem = activeElementPath[i];\n\n      if (isListItem(activeItem)) {\n        return this.items.indexOf(activeItem);\n      }\n    }\n\n    return -1;\n  }\n\n  focusItemAtIndex(index: number) {\n    for (const item of this.items) {\n      if (item.tabindex === 0) {\n        item.tabindex = -1;\n        break;\n      }\n    }\n\n    this.items[index].tabindex = 0;\n    this.items[index].focus();\n  }\n\n  override focus() {\n    const root = this.mdcRoot;\n\n    if (root) {\n      root.focus();\n    }\n  }\n\n  override blur() {\n    const root = this.mdcRoot;\n\n    if (root) {\n      root.blur();\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {ListBase} from './mwc-list-base';\nimport {styles} from './mwc-list.css';\n\nexport {ActionDetail, createSetFromIndex, IndexDiff, isEventMulti, isIndexSet, MultiSelectedEvent, MWCListIndex, SelectedDetail, SelectedEvent, SingleSelectedEvent} from './mwc-list-foundation';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-list': List;\n  }\n}\n\n@customElement('mwc-list')\nexport class List extends ListBase {\n  static override styles = [styles];\n}\n"],
  "mappings": "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",
  "names": []
}
