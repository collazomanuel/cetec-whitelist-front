{
  "version": 3,
  "sources": ["../../@material/form-field/constants.ts", "../../@material/form-field/foundation.ts", "../../@material/mwc-formfield/mwc-formfield-base.ts", "../../@material/mwc-formfield/mwc-formfield.ts"],
  "sourcesContent": [null, null, "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n// tslint:disable:no-new-decorators\n\nimport {MDCFormFieldAdapter} from '@material/form-field/adapter';\nimport MDCFormFieldFoundation from '@material/form-field/foundation';\nimport {BaseElement, EventType, SpecificEventListener} from '@material/mwc-base/base-element';\nimport {FormElement} from '@material/mwc-base/form-element';\nimport {observer} from '@material/mwc-base/observer';\nimport {html} from 'lit';\nimport {property, query, queryAssignedNodes} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\n\nexport class FormfieldBase extends BaseElement {\n  @property({type: Boolean}) alignEnd = false;\n  @property({type: Boolean}) spaceBetween = false;\n  @property({type: Boolean}) nowrap = false;\n\n  @property({type: String})\n  @observer(async function(this: FormfieldBase, label: string) {\n    this.input?.setAttribute('aria-label', label);\n  })\n  label = '';\n\n  @query('.mdc-form-field') protected mdcRoot!: HTMLElement;\n\n  protected mdcFoundation!: MDCFormFieldFoundation;\n\n  protected readonly mdcFoundationClass = MDCFormFieldFoundation;\n\n  protected createAdapter(): MDCFormFieldAdapter {\n    return {\n      registerInteractionHandler:\n          <K extends EventType>(type: K, handler: SpecificEventListener<K>) => {\n            this.labelEl.addEventListener(type, handler);\n          },\n      deregisterInteractionHandler:\n          <K extends EventType>(type: K, handler: SpecificEventListener<K>) => {\n            this.labelEl.removeEventListener(type, handler);\n          },\n      activateInputRipple: async () => {\n        const input = this.input;\n        if (input instanceof FormElement) {\n          const ripple = await input.ripple;\n          if (ripple) {\n            ripple.startPress();\n          }\n        }\n      },\n      deactivateInputRipple: async () => {\n        const input = this.input;\n        if (input instanceof FormElement) {\n          const ripple = await input.ripple;\n          if (ripple) {\n            ripple.endPress();\n          }\n        }\n      },\n    };\n  }\n\n  @queryAssignedNodes('', true, '*')\n  protected slottedInputs!: HTMLElement[]|null;\n\n  @query('label') protected labelEl!: HTMLLabelElement;\n\n  protected get input() {\n    return this.slottedInputs?.[0] ?? null;\n  }\n\n  protected override render() {\n    const classes = {\n      'mdc-form-field--align-end': this.alignEnd,\n      'mdc-form-field--space-between': this.spaceBetween,\n      'mdc-form-field--nowrap': this.nowrap\n    };\n\n    return html`\n      <div class=\"mdc-form-field ${classMap(classes)}\">\n        <slot></slot>\n        <label class=\"mdc-label\"\n               @click=\"${this._labelClick}\">${this.label}</label>\n      </div>`;\n  }\n\n  override click() {\n    this._labelClick();\n  }\n\n  protected _labelClick() {\n    const input = this.input;\n    if (input) {\n      input.focus();\n      input.click();\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {FormfieldBase} from './mwc-formfield-base';\nimport {styles} from './mwc-formfield.css';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-formfield': Formfield;\n  }\n}\n\n@customElement('mwc-formfield')\nexport class Formfield extends FormfieldBase {\n  static override styles = [styles];\n}\n"],
  "mappings": "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",
  "names": []
}
